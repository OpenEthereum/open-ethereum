stages:
  - test
  - js-build
  - push-release
  - build
variables:
  GIT_DEPTH: "3"
  SIMPLECOV: "true"
  RUST_BACKTRACE: "1"
  RUSTFLAGS: ""
  CARGOFLAGS: ""
  CI_SERVER_NAME: "GitLab CI"
cache:
  key: "$CI_BUILD_STAGE/$CI_BUILD_REF_NAME"
  untracked: true
linux-stable:
  stage: build
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-stable
  tags:
    - rust
    - rust-stable
  artifacts:
    paths:
    - target/release/parity
    - target/release/parity-evm
    - target/release/ethstore
    - target/release/ethkey
    name: "stable-x86_64-unknown-linux-gnu_parity"
linux-snap:
  stage: build
  image: parity/snapcraft:gitlab-ci
  only:
    - snap
    - beta
    - tags
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-snap
  tags:
    - rust
    - rust-stable
  artifacts:
    paths:
    - scripts/parity_*_amd64.snap
    name: "stable-x86_64-unknown-snap-gnu_parity"
  allow_failure: true  
linux-stable-debian:
  stage: build
  image: parity/rust-debian:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-stable-debian
  tags:
    - rust
    - rust-debian
  artifacts:
    paths:
    - target/release/parity
    name: "stable-x86_64-unknown-debian-gnu_parity"
linux-beta:
  stage: build
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-beta
  tags:
    - rust
    - rust-beta
  artifacts:
    paths:
    - target/release/parity
    name: "beta-x86_64-unknown-linux-gnu_parity"
  allow_failure: true
linux-nightly:
  stage: build
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-nightly
  tags:
    - rust
    - rust-nightly
  artifacts:
    paths:
    - target/release/parity
    name: "nigthly-x86_64-unknown-linux-gnu_parity"
  allow_failure: true
linux-centos:
  stage: build
  image: parity/rust-centos:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-centos
  tags:
    - rust
    - rust-centos
  artifacts:
    paths:
    - target/release/parity
    name: "x86_64-unknown-centos-gnu_parity"
linux-i686:
  stage: build
  image: parity/rust-i686:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-i686
  tags:
    - rust
    - rust-i686
  artifacts:
    paths:
      - target/i686-unknown-linux-gnu/release/parity
    name: "i686-unknown-linux-gnu"
  allow_failure: true
linux-armv7:
  stage: build
  image: parity/rust-armv7:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-armv7
  tags:
    - rust
    - rust-arm
  artifacts:
    paths:
    - target/armv7-unknown-linux-gnueabihf/release/parity
    name: "armv7_unknown_linux_gnueabihf_parity"
  allow_failure: true
linux-arm:
  stage: build
  image: parity/rust-arm:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-arm
  tags:
    - rust
    - rust-arm
  artifacts:
    paths:
    - target/arm-unknown-linux-gnueabihf/release/parity
    name: "arm-unknown-linux-gnueabihf_parity"
  allow_failure: true
linux-aarch64:
  stage: build
  image: parity/rust-arm64:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh linux-aarch64
  tags:
    - rust
    - rust-arm
  artifacts:
    paths:
    - target/aarch64-unknown-linux-gnu/release/parity
    name: "aarch64-unknown-linux-gnu_parity"
  allow_failure: true
darwin:
  stage: build
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh darwin
  tags:
    - osx
  artifacts:
    paths:
    - target/release/parity
    name: "x86_64-apple-darwin_parity"
windows:
  cache:
    key: "%CI_BUILD_STAGE%/%CI_BUILD_REF_NAME%"
    untracked: true
  stage: build
  only:
    - beta
    - tags
    - stable
    - triggers
  script:
    - set PLATFORM=x86_64-pc-windows-msvc
    - set INCLUDE=C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Include;C:\vs2015\VC\include;C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt
    - set LIB=C:\vs2015\VC\lib;C:\Program Files (x86)\Windows Kits\10\Lib\10.0.10240.0\ucrt\x64
    - set RUST_BACKTRACE=1
    - set RUSTFLAGS=%RUSTFLAGS%
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh windows
  tags:
   - rust-windows
  artifacts:
    paths:
    - target/release/parity.exe
    - target/release/parity.pdb
    - nsis/InstallParity.exe
    name: "x86_64-pc-windows-msvc_parity"
docker-build:
  stage: build
  only:
    - tags
    - triggers
  before_script:
    - docker info
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh docker-build
  tags:
    - docker
test-coverage:
  stage: test
  only:
    - master
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh test-coverage
  tags:
    - kcov
  allow_failure: true
test-darwin:
  stage: test
  only:
    - triggers
  before_script:
    - git submodule update --init --recursive
    - export RUST_FILES_MODIFIED=$(git --no-pager diff --name-only $CI_BUILD_REF^ $CI_BUILD_REF | grep -v -e "^js/" -e ^\\. -e ^LICENSE -e ^README.md -e ^appveyor.yml -e ^test.sh -e ^windows/ -e ^scripts/ -e^mac/ -e ^nsis/ | wc -l)
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh test-darwin
  tags:
    - osx
  allow_failure: true
test-windows:
  stage: test
  only:
    - triggers
  before_script:
    - git submodule update --init --recursive
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh test-windows
  tags:
    - rust-windows
  allow_failure: true
test-rust-stable:
  stage: test
  image: parity/rust:gitlab-ci
  before_script:
    - git submodule update --init --recursive
    - export RUST_FILES_MODIFIED=$(git --no-pager diff --name-only $CI_BUILD_REF^ $CI_BUILD_REF | grep -v -e ^js -e ^\\. -e ^LICENSE -e ^README.md -e ^test.sh -e ^windows/ -e ^scripts/ -e^mac/ -e ^nsis/ | wc -l)
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh test-rust-stable
  tags:
    - rust
    - rust-stable
js-test:
  stage: test
  image: parity/rust:gitlab-ci
  before_script:
    - git submodule update --init --recursive
    - export JS_FILES_MODIFIED=$(git --no-pager diff --name-only $CI_BUILD_REF^ $CI_BUILD_REF | grep ^js/ | wc -l)
    - if [ $JS_FILES_MODIFIED -eq 0 ]; then echo "Skipping JS deps install since no JS files modified."; else ./js/scripts/install-deps.sh;fi
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh js-test
  tags:
    - rust
    - rust-stable
test-rust-beta:
  stage: test
  only:
    - triggers
    - master
  image: parity/rust:gitlab-ci
  before_script:
    - git submodule update --init --recursive
    - export RUST_FILES_MODIFIED=$(git --no-pager diff --name-only $CI_BUILD_REF^ $CI_BUILD_REF | grep -v -e ^js -e ^\\. -e ^LICENSE -e ^README.md -e ^appveyor.yml -e ^test.sh -e ^windows/ -e ^scripts/ -e^mac/ -e ^nsis/ | wc -l)
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh test-rust-beta
  tags:
    - rust
    - rust-beta
  allow_failure: true
test-rust-nightly:
  stage: test
  only:
    - triggers
    - master
  image: parity/rust:gitlab-ci
  before_script:
    - git submodule update --init --recursive
    - export RUST_FILES_MODIFIED=$(git --no-pager diff --name-only $CI_BUILD_REF^ $CI_BUILD_REF | grep -v -e ^js -e ^\\. -e ^LICENSE -e ^README.md -e ^appveyor.yml -e ^test.sh -e ^windows/ -e ^scripts/ -e^mac/ -e ^nsis/ | wc -l)
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh test-rust-nightly
  tags:
    - rust
    - rust-nightly
  allow_failure: true
js-release:
  stage: js-build
  only:
    - master
    - beta
    - stable
    - tags
    - triggers
  image: parity/rust:gitlab-ci
  before_script:
    - export JS_FILES_MODIFIED=$(git --no-pager diff --name-only $CI_BUILD_REF^ $CI_BUILD_REF | grep ^js/ | wc -l)
    - echo $JS_FILES_MODIFIED
    - if [ $JS_FILES_MODIFIED -eq 0  ]; then echo "Skipping JS deps install since no JS files modified."; else ./js/scripts/install-deps.sh;fi
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh js-release
  tags:
    - javascript
push-release:
  stage: push-release
  only:
    - tags
    - triggers
  image: parity/rust:gitlab-ci
  script:
    - chmod +x ./scripts/gitlab-ci.sh
    - ./scripts/gitlab-ci.sh push-release
  tags:
    - curl
