stages:
  - test
  - build
variables:
  RUST_BACKTRACE: "1"
  RUSTFLAGS: ""
  CARGOFLAGS: ""
  CI_SERVER_NAME: "GitLab CI"
  LIBSSL: "libssl1.0.0 (>=1.0.0)"
cache:
  key: "$CI_JOB_NAME"
  paths:
    - target/
    - cargo/
  untracked: true
.list_of_refs: &list_of_refs #list of git refs for build and/or push, deploy
  stage: build
  only:
    - stable
    - beta
    - gitlab
    - tags
    - triggers
.artifacts_rules: &artifacts_rules
  artifacts:
    when: on_success
    expire_in: 1 mos
    paths:
    - artifacts/
linux-stable:
  <<: *list_of_refs
  image: parity/rust:gitlab-ci
  script:
    - rustup default stable
    # ARGUMENTS: 1. BUILD_PLATFORM (target for binaries) 2. PLATFORM (target for cargo) 3. ARC (architecture) 4. & 5. CC & CXX flags 6. binary identifier
    - scripts/gitlab-build.sh x86_64-unknown-linux-gnu x86_64-unknown-linux-gnu amd64 gcc g++ ubuntu
  tags:
    - rust-stable
  <<: *artifacts_rules
linux-stable-debian:
  <<: *list_of_refs
  image: parity/rust-debian:gitlab-ci
  script:
    - export LIBSSL="libssl1.1 (>=1.1.0)"
    - scripts/gitlab-build.sh x86_64-unknown-debian-gnu x86_64-unknown-linux-gnu amd64 gcc g++ debian
  tags:
    - rust-debian
  <<: *artifacts_rules
linux-centos:
  <<: *list_of_refs
  image: parity/rust-centos:gitlab-ci
  script:
    - scripts/gitlab-build.sh x86_64-unknown-centos-gnu x86_64-unknown-linux-gnu x86_64 gcc g++ centos
  retry: 2 #if version `GLIBC_2.18' not found
  tags:
    - rust-centos
  <<: *artifacts_rules
linux-i686:
  <<: *list_of_refs
  image: parity/rust-i686:gitlab-ci
  script:
    - scripts/gitlab-build.sh i686-unknown-linux-gnu i686-unknown-linux-gnu i386 gcc g++ ubuntu
  tags:
    - rust-i686
  <<: *artifacts_rules
linux-armv7:
  <<: *list_of_refs
  image: parity/rust-armv7:gitlab-ci
  script:
    - scripts/gitlab-build.sh armv7-unknown-linux-gnueabihf armv7-unknown-linux-gnueabihf armhf arm-linux-gnueabihf-gcc arm-linux-gnueabihf-g++ ubuntu
  tags:
    - rust-arm
  artifacts:
    paths:
    - artifacts/
    expire_in: 1 mos
    name: "armv7_unknown_linux_gnueabihf_parity"
linux-arm:
  <<: *list_of_refs
  image: parity/rust-arm:gitlab-ci
  script:
    - scripts/gitlab-build.sh arm-unknown-linux-gnueabihf arm-unknown-linux-gnueabihf armhf arm-linux-gnueabihf-gcc arm-linux-gnueabihf-g++ ubuntu
  tags:
    - rust-arm
  <<: *artifacts_rules
linux-aarch64:
  <<: *list_of_refs
  image: parity/rust-arm64:gitlab-ci
  script:
    - scripts/gitlab-build.sh aarch64-unknown-linux-gnu aarch64-unknown-linux-gnu arm64 aarch64-linux-gnu-gcc aarch64-linux-gnu-g++ ubuntu
  tags:
    - rust-arm
  <<: *artifacts_rules
linux-snap-amd64:
  <<: *list_of_refs
  image: parity/rust:gitlab-ci
  script:
    - scripts/gitlab-build.sh x86_64-unknown-snap-gnu x86_64-unknown-linux-gnu amd64 gcc g++ snap
  tags:
    - rust-stable
  <<: *artifacts_rules
linux-snap-i386:
  <<: *list_of_refs
  image: parity/rust-i686:gitlab-ci
  script:
    - scripts/gitlab-build.sh i686-unknown-snap-gnu i686-unknown-linux-gnu i386 gcc g++ snap
  tags:
    - rust-stable
  <<: *artifacts_rules
linux-snap-arm64:
  <<: *list_of_refs
  image: parity/rust-arm64:gitlab-ci
  script:
    - scripts/gitlab-build.sh arm64-unknown-snap-gnu aarch64-unknown-linux-gnu arm64 aarch64-linux-gnu-gcc aarch64-linux-gnu-g++ snap
  tags:
    - rust-stable
  <<: *artifacts_rules
linux-snap-armhf:
  <<: *list_of_refs
  image: parity/rust-armv7:gitlab-ci
  script:
    - scripts/gitlab-build.sh armhf-unknown-snap-gnu armv7-unknown-linux-gnueabihf armhf arm-linux-gnueabihf-gcc arm-linux-gnueabihf-g++ snap
  tags:
    - rust-stable
  <<: *artifacts_rules
darwin:
  <<: *list_of_refs
  script:
    - scripts/gitlab-build.sh x86_64-apple-darwin x86_64-apple-darwin macos gcc g++ macos
  tags:
    - osx
  <<: *artifacts_rules
windows:
  cache:
      key: "%CI_JOB_NAME%"
      paths:
        - target/
        - cargo/
      untracked: true
  <<: *list_of_refs
  script:
    - sh scripts/gitlab-build.sh x86_64-pc-windows-msvc x86_64-pc-windows-msvc installer "" "" windows
  tags:
   - rust-windows
  <<: *artifacts_rules
docker-build:
  <<: *list_of_refs
  script:
    - scripts/docker-build.sh
  tags:
    - docker
test-coverage:
  stage: test
  only:
    - master
  script:
    - scripts/gitlab-test.sh test-coverage
  tags:
    - kcov
  allow_failure: true
.test_stage: &test_stage
  stage: test
  image: parity/rust:gitlab-ci
  tags:
    - rust-stable
  allow_failure: true
  only:
    - triggers
    - master
    - gitlab
test-rust-stable:
  stage: test
  image: parity/rust:gitlab-ci
  script:
    - scripts/gitlab-test.sh stable
  tags:
    - rust-stable
test-rust-beta:
  <<: *test_stage
  script:
    - scripts/gitlab-test.sh beta
test-rust-nightly:
  <<: *test_stage
  script:
    - scripts/gitlab-test.sh nightly
test-rustfmt:
  <<: *test_stage
  script:
    - scripts/gitlab-test.sh rustfmt
test-clippy:
  <<: *test_stage
  script:
    - scripts/gitlab-test.sh clippy
